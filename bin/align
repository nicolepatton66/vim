#!/usr/bin/env perl

$amt_leading_ws = -1;
$smallest       = 999;
@token_sizes    = ();
@lines          = ();

# read in lines
while(<>) {
    chomp($line = $_);
    $line =~ s/\r//g;

    (@tokens) = $line =~ /([^{ \t]*{[^}]*}\S*|[^( \t]*\([^)]*\)\S*|[^" \t]*"[^"]*"\S*|[^' \t]*'[^']*'\S*|\/\/.*$|\S+)/g;
    $num_tokens = scalar(@tokens);

    push @lines, [ @tokens ];
    $num_tokens == 0 and next; # don't process empty lines ...
    $num_tokens == 1 and $tokens[0] =~ /^(\/\/|#)/ and next; # ...or lines that are only comments

    # get leading whitespace from first non-empty line
    if($amt_leading_ws == -1) {
        $line =~ /^(\s*)/;
        $amt_leading_ws = length $1;
    }

    # record smallest arr of tokens
    $num_tokens < $smallest and $smallest = $num_tokens;

    # record biggest token at each col
    for($i = 0; $i < $smallest; $i++) {
        $length = length $tokens[$i];

        if(exists $token_sizes[$i]) {
            $length > $token_sizes[$i] and $token_sizes[$i] = $length;
        }
        else {
            $token_sizes[$i] = $length;
        }
    }
}

$smallest--;

for $i (0 .. $#lines) {
    $tokens = $lines[$i];

    $num_tokens = scalar(@$tokens);
    $num_tokens == 0 and do { print "\n"; next; };

    $amt_leading_ws > 0 and print " " x $amt_leading_ws;

    for($j = 0; $j < $num_tokens; $j++) {
        $token = $tokens->[$j];
        $pad = 0;
        $j < $smallest and $pad = $token_sizes[$j] - length($token);

        $j != 0 and print " ";
        print "$token" . " " x $pad;
    }

    print "\n";
}

exit 0;
